<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<!-- 구현하고자 하는 인터페이스의 풀 경로를 작성 -->
<mapper namespace="com.spring.basic.score.repository.IScoreMapper">

	<!--  DB 컬럼명과 Entity 객체의 필드명을 맞추는 resultMap을 선언 -->
	<!--  result 조회되는 행이 여러개면 마이바티스가 알아서 포장해옴! 그래서 List작성안해도됨  
		근데 ,,,,변수명이랑 컬럼동일해야 가능해서 알려줘야함->stu_num 은 stuNum이구···· -->
	<resultMap type="com.spring.basic.score.entity.Score" id="scoreMap">
		<!-- 테이블에서 PRIMARYKEY 칼럼은 id태그로 , 나머지는 result로 선언 -->
		<id property="stuNum" column="stu_num"/>
		<result property="stuName" column="stu_name"/>
	</resultMap>
	
	
	<!-- 점수 등록 기능 Insert -->
	<insert id="save"><!-- id에는 ! 구현하고자하는 인터페이스의 메서드 -->
		INSERT INTO score
		VALUES(score_seq.NEXTVAL,#{stuName},#{kor},#{eng},
		#{math},#{total},#{average},#{grade})
	<!--  Score 객체가 넘어오니까 안에 있는 거 #{}안에는 변수명 작성!  -->
	</insert> 

	<!-- 성적 정보 전체 조회 기능 -->
	<!-- findAll의 리턴 타입은 List<Score>입니다.
		List는 직접 언급하실 필요없어요(조회되는 데이터가 여러행이면 알아서 List로 포장합니다.)
		Score객체는 Score테이블의 컬럼명과 필드명이 완벽히 일치하지 않기 때문에
		객체로 포장할때위에 선언한 resultMap을 참조해서 객체로 포장하라는 얘기입니다. -->
	<select id="findAll" resultMap="scoreMap">
		SELECT * FROM score
	</select>

	<!-- 점수 삭제 기능 -->
	
	<delete id="deleteByStuNum">
		DELETE FROM score WHERE stu_num = #{stuNum}
	</delete>

	<!-- 점수 상세 정보 -->
	<select id="findByStuNum" resultMap="scoreMap">
		SELECT * FROM score
		WHERE stu_num = #{stuNum}
	</select>
	
	<!--  점수 수정  -->
	<update id="modify">
		UPDATE score
		SET kor= #{kor}, eng=#{eng}, math=#{math},
		total =#{total}, average=#{average}, grade=#{grade}
		WHERE stu_num= #{stuNum}
	</update>

</mapper>
